(()=>{"use strict";var e=document.querySelector(".profile__title"),t=document.querySelector(".profile__subtitle"),n=document.querySelector(".popup_place_profile"),r=document.querySelector(".popup__form_place_profile"),o=document.querySelector(".popup__form-text_type_profile-name"),i=document.querySelector(".popup__form-text_type_profile-about"),u=document.querySelector(".profile__edit-button_place_about-profile"),c=document.querySelector(".elements__container"),a=document.querySelector(".popup_place_element"),l=document.querySelector(".popup__form_place_element"),s=document.querySelector(".profile__add-button"),f=document.querySelector(".profile__avatar"),p=document.querySelector(".popup_place_avatar"),_=document.querySelector(".profile__edit-button_place_avatar"),h=document.querySelector(".popup__form_place_avatar"),d=(document.querySelector(".popup__form-text_type_avatar"),document.querySelector(".popup_place_image")),y=document.querySelector(".popup_place_delete-card"),m={inputSelector:".popup__form-text",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_state_invalid",inputErrorClass:"popup__form-text_state_invalid",errorClass:"error_active"};function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n,r,o,i){var u,c,a=this,l=i.handleCardClick,s=i.handleOpenPopupWithSubmit,f=i.handleClickLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c=function(){a._element.querySelector(".element__image").addEventListener("click",(function(e){a._handleOpenImage(e.target)})),a._deleteButton.addEventListener("click",(function(e){e.stopPropagation(e),a._handleOpenPopupWithSubmit()})),a._element.querySelector(".element__button-like").addEventListener("click",(function(e){e.stopPropagation(),a._handleClickLike(a._likeButton,a._id,a._likeCounter,a._likes)}))},(u="_setEventListeners")in this?Object.defineProperty(this,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):this[u]=c,this._name=t.name,this._link=t.link,this._id=t._id,this._likes=t.likes,this._ownerId=t.owner,this._cardSelector=n,this._myId=r,this._api=o,this._handleOpenImage=l,this._handleOpenPopupWithSubmit=s,this._handleClickLike=f,this._element=this._getTemplate(),this._deleteButton=this._element.querySelector(".element__button-delete"),this._likeButton=this._element.querySelector(".element__button-like"),this._likeCounter=this._element.querySelector("#like-counter")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this._element.querySelector(".element__image"),t=this._element.querySelector(".element__title");return this._checkDeleteButton(),this._checkLike(),this._setEventListeners(),e.src=this._link,e.alt=this._name,t.textContent=this._name,this._likeCounter.textContent=this._likes.length,this._element}},{key:"_checkLike",value:function(){this._likes.map((function(e){return e._id})).includes(this._myId)?this._likeButton.classList.add("element__button-like_active"):this._likeButton.classList.remove("element__button-like_active")}},{key:"_checkDeleteButton",value:function(){this._ownerId._id===this._myId?this._deleteButton.classList.add("element__button-delete_active"):this._deleteButton.classList.remove("element__button-delete_active")}}])&&v(t.prototype,n),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=n}var t,n;return t=e,(n=[{key:"setItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&k(t.prototype,n),e}();function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),w(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),w(this,"_clickOutsidePopup",(function(e){e.target.classList.contains("popup_visible")&&n.close(e.target)})),this._popupSelector=t}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_visible"),document.addEventListener("keyup",this._handleEscClose),document.addEventListener("click",this._clickOutsidePopup)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_visible"),document.removeEventListener("keyup",this._handleEscClose),document.removeEventListener("click",this._clickOutsidePopup)}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}}])&&S(t.prototype,n),e}();function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?B(e):t}function B(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function u(e,t){var n,r,o,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),c=function(e){e.preventDefault(),n._element.parent.remove()},(o="delete")in(r=B(n=i.call(this,e,t)))?Object.defineProperty(r,o,{value:c,enumerable:!0,configurable:!0,writable:!0}):r[o]=c,n._popupImage=n._popupSelector.querySelector(".popup__image"),n._popupImageTitle=n._popupSelector.querySelector(".popup__title_place_image"),n}return t=u,(n=[{key:"open",value:function(e,t){this._popupImage.src=e,this._popupImageTitle.textContent=t,this._popupImage.alt=t,L(q(u.prototype),"open",this).call(this)}}])&&O(t.prototype,n),u}(E);function x(e){return(x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function D(e,t){return!t||"object"!==x(t)&&"function"!=typeof t?A(e):t}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function U(e,t,n){return(U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function V(e){return(V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function F(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function u(e){var t,n,r=e.popupSelector,o=e.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),F(A(n=i.call(this,r)),"_submit",(function(e){e.preventDefault(),n._submitForm(n._getInputValues()),n._clickSaveChange()})),F(A(n),"setEventListeners",(function(){U((t=A(n),V(u.prototype)),"setEventListeners",t).call(t),n._form.addEventListener("submit",n._submit)})),n._submitForm=o,n._saveButton=n._popupSelector.querySelector(".popup__save-button"),n._form=n._popupSelector.querySelector(".popup__form"),n._inputList=n._popupSelector.querySelectorAll(".popup__form-text"),n._saveButtonBeforeClick=n._saveButton.textContent,n}return t=u,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"_clickSaveChange",value:function(){this._saveButton.textContent="Сохранение..."}},{key:"close",value:function(){U(V(u.prototype),"close",this).call(this),this._saveButton.textContent=this._saveButtonBeforeClick,this._form.reset()}}])&&R(t.prototype,n),u}(E);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function W(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var J=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),W(this,"enableValidation",(function(){r._setEventListener(r._form),r._form.addEventListener("submit",(function(e){e.preventDefault()})),r._setButtonState(r._submitButton,r._form.checkValidity())})),W(this,"_setEventListener",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._setButtonState(r._submitButton,r._form.checkValidity())}))}))})),W(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList=this._form.querySelectorAll(this._inputSelector)}var t,n;return t=e,(n=[{key:"clearErrorMessage",value:function(){var e=this;this._inputList.forEach((function(t){e._hideError(t),e._setButtonState(e._submitButton,e._form.checkValidity())}))}},{key:"_showError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass)}},{key:"_hideError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_setButtonState",value:function(e,t){t?(e.classList.remove(this._inactiveButtonClass),e.disabled=!1):(e.classList.add(this._inactiveButtonClass),e.disabled=!0)}}])&&N(t.prototype,n),e}();function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._user=t,this._about=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._user.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e,t){this._user.textContent=e,this._about.textContent=t}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&G(t.prototype,n),e}();function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var $=function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))},K=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserData",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:this._headers}).then($)}},{key:"patchUserData",value:function(e){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then($)}},{key:"patchUserAvatar",value:function(e){return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then($)}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"cards"),{method:"GET",headers:this._headers}).then($)}},{key:"addNewCard",value:function(e){return fetch("".concat(this._url,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then($)}},{key:"removeCard",value:function(e){return fetch("".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then($)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then($)}},{key:"removeLike",value:function(e){return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then($)}}])&&z(t.prototype,n),e}();function Q(e){return(Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Y(e,t){return(Y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Z(e,t){return!t||"object"!==Q(t)&&"function"!=typeof t?ee(e):t}function ee(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function te(e,t,n){return(te="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=ne(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function ne(e){return(ne=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function re(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var oe=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Y(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ne(r);if(o){var n=ne(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Z(this,e)});function u(e){var t,n,r=e.popupSelector,o=e.submit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),re(ee(n=i.call(this,r)),"setEventListeners",(function(){te((t=ee(n),ne(u.prototype)),"setEventListeners",t).call(t),n._form.addEventListener("submit",n._submitDelete)})),re(ee(n),"_submitDelete",(function(e){e.preventDefault(),n._clickSaveChange(),n._submit(n._cardId)})),n._submit=o,n._deleteButton=n._popupSelector.querySelector(".popup__save-button"),n._form=n._popupSelector.querySelector(".popup__window_place_delete-card"),n._deleteButtonBeforeClick=n._deleteButton.textContent,n}return t=u,(n=[{key:"_clickSaveChange",value:function(){this._deleteButton.textContent="Удаление..."}},{key:"open",value:function(e,t){te(ne(u.prototype),"open",this).call(this),this._cardId=e,this._cardElement=t}},{key:"deleteCard",value:function(){this._cardElement.remove()}},{key:"close",value:function(){te(ne(u.prototype),"close",this).call(this),this._deleteButton.textContent=this._deleteButtonBeforeClick}}])&&X(t.prototype,n),u}(E);function ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ue,ce,ae=new J(m,r),le=new J(m,l),se=new J(m,h),fe=new I(d),pe=new H(e,t,f),_e=new g(de,c),he=new K({url:"https://mesto.nomoreparties.co/v1/cohort-20/",headers:{"content-type":"application/json",authorization:"a4e2a7e9-e2ca-4fbc-8dff-1e2c4b21f19a"}});function de(e){var t=new b(e,"#element-template",ue,he,{handleCardClick:function(e){fe.open(e.src,e.alt)},handleOpenPopupWithSubmit:function(){Se.open(ce=e._id,t)},handleClickLike:function(e,t,n,r){e.classList.contains("element__button-like_active")?he.removeLike(t).then((function(e){r.length=e.likes.length,n.textContent=r.length})).then((function(){return e.classList.remove("element__button-like_active")})).catch((function(e){console.log(e)})):he.addLike(t).then((function(e){r.length=e.likes.length,n.textContent=r.length})).then((function(){return e.classList.add("element__button-like_active")})).catch((function(e){console.log(e)}))}}).generateCard();_e.setItem(t)}function ye(){o.value=pe.getUserInfo().name,i.value=pe.getUserInfo().about,me.open(),ae.clearErrorMessage()}Promise.all([he.getUserData(),he.getAllCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,c=e[Symbol.iterator]();!(r=(u=c.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ie(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ie(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];pe.setUserInfo(o.name,o.about),pe.setUserAvatar(o.avatar),ue=o._id,_e.renderItems(i.reverse())})).then((function(){u.addEventListener("click",ye),_.addEventListener("click",ve),s.addEventListener("click",ge)})).catch((function(e){console.log(e)}));var me=new M({popupSelector:n,submitForm:function(e){he.patchUserData(e).then((function(e){return pe.setUserInfo(e.name,e.about)})).catch((function(e){console.log(e)})).finally((function(){return me.close()}))}});function ve(){be.open(),se.clearErrorMessage()}var be=new M({popupSelector:p,submitForm:function(e){he.patchUserAvatar(e).then((function(e){return pe.setUserAvatar(e.avatar)})).catch((function(e){console.log(e)})).finally((function(){return be.close()}))}}),ke=new M({popupSelector:a,submitForm:function(e){he.addNewCard(e).then((function(e){return de(e)})).catch((function(e){console.log(e)})).finally((function(){return ke.close()}))}});function ge(){ke.open(),le.clearErrorMessage()}var Se=new oe({popupSelector:y,submit:function(){he.removeCard(ce).then((function(){return Se.deleteCard()})).catch((function(e){console.log(e)})).finally((function(){return Se.close()}))}});me.setEventListeners(),be.setEventListeners(),ke.setEventListeners(),fe.setEventListeners(),Se.setEventListeners(),se.enableValidation(),ae.enableValidation(),le.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,